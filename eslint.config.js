module.exports = [
    {
        languageOptions: {
            ecmaVersion: 6,
            sourceType: 'commonjs',
            globals: {
                // Node.js global environment
                // Explicitly list Node.js globals without using spread syntax
                module: 'readonly',
                require: 'readonly',
                process: 'readonly',
                __dirname: 'readonly',
                __filename: 'readonly',
                Buffer: 'readonly',
                console: 'readonly',
                setTimeout: 'readonly',
                clearTimeout: 'readonly',
                setInterval: 'readonly',
                clearInterval: 'readonly'
            }
        },
        rules: {
            // Possible Errors
            'comma-dangle': ['error', 'never'],
            'no-cond-assign': 'error',
            'no-console': 'warn',
            'no-constant-condition': 'error',
            'no-control-regex': 'error',
            'no-debugger': 'warn',
            'no-dupe-args': 'error',
            'no-dupe-keys': 'error',
            'no-duplicate-case': 'error',
            'no-empty-character-class': 'error',
            'no-empty': 'error',
            'no-ex-assign': 'error',
            'no-extra-boolean-cast': 'error',
            'no-extra-parens': 'off',
            'no-extra-semi': 'error',
            'no-func-assign': 'error',
            'no-inner-declarations': 'error',
            'no-invalid-regexp': 'error',
            'no-irregular-whitespace': 'error',
            'no-negated-in-lhs': 'error', // renamed to no-unsafe-negation in newer ESLint
            'no-obj-calls': 'error',
            'no-regex-spaces': 'error',
            'no-sparse-arrays': 'error',
            'no-unreachable': 'warn',
            'use-isnan': 'error',
            'valid-jsdoc': 'off',
            'valid-typeof': 'error',

            // Best Practices
            'accessor-pairs': ['error', {getWithoutSet: false, setWithoutGet: true}],
            'block-scoped-var': 'error',
            complexity: 'off',
            'consistent-return': 'off',
            curly: ['error', 'all'],
            'default-case': 'off',
            'dot-notation': 'error',
            'dot-location': ['error', 'property'],
            eqeqeq: 'error',
            'guard-for-in': 'off',
            'no-alert': 'warn',
            'no-caller': 'error',
            'no-div-regex': 'off',
            'no-else-return': 'error',
            'no-eq-null': 'error',
            'no-eval': 'error',
            'no-extend-native': 'error',
            'no-extra-bind': 'error',
            'no-fallthrough': 'error',
            'no-floating-decimal': 'error',
            'no-implied-eval': 'error',
            'no-iterator': 'error',
            'no-labels': 'error',
            'no-lone-blocks': 'error',
            'no-loop-func': 'error',
            'no-multi-spaces': 'error',
            'no-native-reassign': 'error', // renamed to no-global-assign in newer ESLint
            'no-new-func': 'error',
            'no-new-wrappers': 'error',
            'no-new': 'off',
            'no-octal-escape': 'error',
            'no-octal': 'error',
            'no-param-reassign': 'off',
            'no-process-env': 'off',
            'no-proto': 'off',
            'no-redeclare': 'error',
            'no-return-assign': 'error',
            'no-script-url': 'error',
            'no-self-compare': 'error',
            'no-sequences': 'error',
            'no-throw-literal': 'error',
            'no-unused-expressions': 'error',
            'no-void': 'error',
            'no-warning-comments': 'off',
            'no-with': 'error',
            radix: 'off',
            'vars-on-top': 'off',
            'wrap-iife': ['error', 'outside'],
            yoda: 'error',

            // Strict Mode
            strict: ['error', 'global'],

            // Variables
            'no-catch-shadow': 'error',
            'no-delete-var': 'error',
            'no-label-var': 'off',
            'no-shadow-restricted-names': 'error',
            'no-shadow': 'error',
            'no-undef-init': 'error',
            'no-undef': 'error',
            'no-undefined': 'off',
            'no-unused-vars': ['error', {vars: 'all', args: 'after-used'}],
            'no-use-before-define': 'off',

            // Node.js
            'callback-return': 'error',
            'global-require': 'error',
            'handle-callback-err': ['error', '^(e|err|error)$'],
            'no-mixed-requires': ['error', true],
            'no-new-require': 'error',
            'no-path-concat': 'error',
            'no-process-exit': 'error',
            'no-restricted-modules': 'off',
            'no-sync': 'off',

            // Stylistic Issues
            'brace-style': ['error', '1tbs', {allowSingleLine: false}],
            camelcase: ['error', {properties: 'always'}],
            'comma-spacing': ['error', {before: false, after: true}],
            'comma-style': ['error', 'last'],
            'computed-property-spacing': ['error', 'never'],
            'consistent-this': 'off',
            'eol-last': 'error',
            'func-names': 'off',
            'func-style': ['error', 'declaration'],
            indent: ['error', 4, {SwitchCase: 1}],
            'keyword-spacing': ['error', {before: true, after: true, overrides: {}}],
            'key-spacing': ['error', {beforeColon: false, afterColon: true}],
            'lines-around-comment': 'off',
            'linebreak-style': ['error', 'unix'],
            'max-nested-callbacks': 'off',
            'new-cap': 'error',
            'new-parens': 'error',
            'newline-after-var': 'off',
            'no-array-constructor': 'error',
            'no-continue': 'off',
            'no-lonely-if': 'error',
            'no-mixed-spaces-and-tabs': 'off',
            'no-multiple-empty-lines': ['error', {max: 2}],
            'no-nested-ternary': 'error',
            'no-new-object': 'error',
            'no-spaced-func': 'error', // renamed to func-call-spacing in newer ESLint
            'no-ternary': 'off',
            'no-trailing-spaces': 'error',
            'no-underscore-dangle': 'off',
            'no-unneeded-ternary': 'error',
            'object-curly-spacing': ['error', 'never'],
            'one-var': ['error', 'never'],
            'operator-assignment': ['error', 'always'],
            'operator-linebreak': ['error', 'after'],
            'padded-blocks': ['error', 'never'],
            'quote-props': ['error', 'as-needed'],
            quotes: ['error', 'single', 'avoid-escape'],
            'semi-spacing': ['error', {before: false, after: true}],
            semi: 'error',
            'sort-vars': ['error', {ignoreCase: true}],
            'space-before-blocks': ['error', 'always'],
            'space-before-function-paren': ['error', 'never'],
            'space-in-parens': ['error', 'never'],
            'space-infix-ops': 'error',
            'space-unary-ops': ['error', {words: true, nonwords: false}],
            'spaced-comment': ['warn', 'always'],
            'wrap-regex': 'off',

            // Legacy
            'max-depth': 'off',
            'max-len': ['off', 120, 4, {ignoreComments: false, ignoreUrls: true}],
            'max-params': 'off',
            'max-statements': 'off',
            'no-bitwise': 'off',
            'no-plusplus': 'off'
        }
    }
];
